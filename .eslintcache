[{"/home/kenzo/Projects/portfolio/src/index.js":"1","/home/kenzo/Projects/portfolio/src/reportWebVitals.js":"2","/home/kenzo/Projects/portfolio/src/App.js":"3","/home/kenzo/Projects/portfolio/src/Header.js":"4","/home/kenzo/Projects/portfolio/src/Footer.js":"5","/home/kenzo/Projects/portfolio/src/About.js":"6","/home/kenzo/Projects/portfolio/src/Contact.js":"7","/home/kenzo/Projects/portfolio/src/Projects.js":"8","/home/kenzo/Projects/portfolio/src/ProjectModal.js":"9"},{"size":513,"mtime":1611174192587,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611090096118,"results":"12","hashOfConfig":"11"},{"size":633,"mtime":1612220294041,"results":"13","hashOfConfig":"11"},{"size":1802,"mtime":1612218787215,"results":"14","hashOfConfig":"11"},{"size":2464,"mtime":1608325335039,"results":"15","hashOfConfig":"11"},{"size":1146,"mtime":1612220713848,"results":"16","hashOfConfig":"11"},{"size":763,"mtime":1611940456903,"results":"17","hashOfConfig":"11"},{"size":3485,"mtime":1612012612255,"results":"18","hashOfConfig":"11"},{"size":1876,"mtime":1611941828930,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"193qoun",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/home/kenzo/Projects/portfolio/src/index.js",[],["41","42"],"/home/kenzo/Projects/portfolio/src/reportWebVitals.js",[],"/home/kenzo/Projects/portfolio/src/App.js",["43","44","45","46","47"],"/home/kenzo/Projects/portfolio/src/Header.js",[],"/home/kenzo/Projects/portfolio/src/Footer.js",[],"/home/kenzo/Projects/portfolio/src/About.js",["48","49"],"/home/kenzo/Projects/portfolio/src/Contact.js",[],"/home/kenzo/Projects/portfolio/src/Projects.js",["50"],"//TODO: make mobile friendly\n//TODO setup OAuth for github and find way to cache requests instead of making a request every time\nimport React from 'react'\nimport './Projects.css';\n\nimport ProjectModal from \"./ProjectModal\"\n\nclass Projects extends React.Component {\n    constructor(props) {\n        super(props);\n        this.close = this.close.bind(this);\n\n        this.state = {\n            projects: [],\n            modal: <div></div>,\n        }\n    }\n\n    componentDidMount() {\n      this.getProjects();\n    }\n    \n    close() {\n      console.log('yes')\n      this.setState({\n        modal: <div></div>\n      });\n    }\n\n    getProjects() {\n        fetch('https://api.github.com/users/KenzoCoenaerts-r0683311/repos')\n            .then(response => response.json())\n            .then(githubProjects => {\n                this.setState({\n                    projects: githubProjects\n                });\n            })\n            .catch(err => console.error(err));\n    }\n\n    openModal(id, args) {\n      console.log(args);\n      \n      this.setState({\n        modal: <ProjectModal action={this.close} id={id} args={args}/>\n      });  \n    }\n\n    //TODO; keep working on svg animation\n    //TODO: change shape of project circles\n    //TODO: make it possible to close projectModal by clicking outside the projectModal\n    render() {\n        return (\n            <div id=\"projects\" onClick={() => console.log(this.state.modal)}>\n              <svg className=\"wave\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#f08080\" fill-opacity=\"1\" d=\"M0,32L14.1,32C28.2,32,56,32,85,74.7C112.9,117,141,203,169,240C197.6,277,226,267,254,229.3C282.4,192,311,128,339,122.7C367.1,117,395,171,424,197.3C451.8,224,480,224,508,213.3C536.5,203,565,181,593,149.3C621.2,117,649,75,678,90.7C705.9,107,734,181,762,192C790.6,203,819,149,847,122.7C875.3,96,904,96,932,122.7C960,149,988,203,1016,208C1044.7,213,1073,171,1101,181.3C1129.4,192,1158,256,1186,261.3C1214.1,267,1242,213,1271,181.3C1298.8,149,1327,139,1355,160C1383.5,181,1412,235,1426,261.3L1440,288L1440,320L1425.9,320C1411.8,320,1384,320,1355,320C1327.1,320,1299,320,1271,320C1242.4,320,1214,320,1186,320C1157.6,320,1129,320,1101,320C1072.9,320,1045,320,1016,320C988.2,320,960,320,932,320C903.5,320,875,320,847,320C818.8,320,791,320,762,320C734.1,320,706,320,678,320C649.4,320,621,320,593,320C564.7,320,536,320,508,320C480,320,452,320,424,320C395.3,320,367,320,339,320C310.6,320,282,320,254,320C225.9,320,198,320,169,320C141.2,320,113,320,85,320C56.5,320,28,320,14,320L0,320Z\"></path></svg>\n              <div>\n              <h2><button>Prev</button> Projects <button>Next</button></h2>\n              <div id=\"projectList\">\n                  {\n                      this.state.projects.map(project => {\n                          //console.log(project);\n                          return (\n                              <a key={project.id} onClick={() => this.openModal(project.id, {\"startDate\": project.created_at, \n                                                                                             \"url\": project.html_url,\n                                                                                             \"name\": project.name})} \n                              ><div className=\"project\"></div></a>\n                          );\n                      })\n                  }\n              </div>\n              </div>\n              {this.state.modal}\n            </div>\n        )\n    }\n}\n\nexport default Projects;","/home/kenzo/Projects/portfolio/src/ProjectModal.js",["51"],"//Imporve style and make mobile friendly\nimport React from 'react';\nimport DOMPurify from 'dompurify';\n\nimport \"./ProjectModal.css\"\n\nclass ProjectModal extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      project: null\n    }\n  }\n  \n  componentDidMount() {\n    this.getProjectInfo()\n  }\n  \n  //TODO clean up readme and make it more presentable\n  getProjectInfo() {\n    fetch(`https://api.github.com/repositories/${this.props.id}/readme`)\n        .then(response => response.json())\n        .then(project => {\n            let x = atob(project.content)\n            x = x.substring(0, 5000)\n            x = x.replaceAll('\\n', '<p>')  \n            x = x.replaceAll('`<title>`', '')\n            x += \" ...\"\n            this.setState({\n              project: x\n            })\n        })\n        .catch(err => console.error(err));\n  }\n  \n  render() {\n    return (\n      <div>\n      <div id=\"myModal\" className=\"modal\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <span className=\"close\" onClick={this.props.action}>&times;</span>\n            <h2>{this.props.args.name}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p>Github: <a href={this.props.args.url}>{this.props.args.url}</a></p>\n            <p>Project: </p>\n            <p>contributors: </p>\n            <p></p>\n            <h1></h1>\n            <div className=\"readme\" dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(this.state.project, {\n                  ALLOWED_TAGS: [\"p\"],\n                  ALLOWED_ATTR: [\"br\"],\n                })\n              }}\n            />\n          </div>\n          <div className=\"modal-footer\">\n            <h3>created at: {this.props.args.startDate}</h3>\n          </div>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\n\nexport default ProjectModal;\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":5,"column":9,"nodeType":"58","messageId":"59","endLine":5,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":5,"column":17,"nodeType":"58","messageId":"59","endLine":5,"endColumn":32},{"ruleId":"56","severity":1,"message":"61","line":11,"column":8,"nodeType":"58","messageId":"59","endLine":11,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":12,"column":8,"nodeType":"58","messageId":"59","endLine":12,"endColumn":15},{"ruleId":"56","severity":1,"message":"63","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":22,"column":25,"nodeType":"66","endLine":22,"endColumn":75},{"ruleId":"64","severity":1,"message":"65","line":23,"column":25,"nodeType":"66","endLine":23,"endColumn":79},{"ruleId":"64","severity":1,"message":"67","line":63,"column":31,"nodeType":"66","endLine":66,"endColumn":32},{"ruleId":"68","severity":1,"message":"69","line":50,"column":13,"nodeType":"66","endLine":50,"endColumn":17},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useLayoutEffect' is defined but never used.","'Projects' is defined but never used.","'Contact' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]